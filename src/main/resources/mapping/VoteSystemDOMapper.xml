<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shu.votetool.dao.VoteSystemDOMapper" >
  <resultMap id="BaseResultMap" type="com.shu.votetool.model.entity.VoteSystemDO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="vote_name" property="voteName" jdbcType="VARCHAR" />
    <result column="single_vote_agree" property="singleVoteAgree" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="ispublic" property="ispublic" jdbcType="INTEGER" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, vote_name, single_vote_agree, description, start_time, end_time, create_time, 
    ispublic, openid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shu.votetool.model.entity.VoteSystemDOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from votesystem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from votesystem
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from votesystem
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shu.votetool.model.entity.VoteSystemDOExample" >
    delete from votesystem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shu.votetool.model.entity.VoteSystemDO" >
    insert into votesystem (id, vote_name, single_vote_agree, 
      description, start_time, end_time, 
      create_time, ispublic, openid
      )
    values (#{id,jdbcType=INTEGER}, #{voteName,jdbcType=VARCHAR}, #{singleVoteAgree,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{ispublic,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shu.votetool.model.entity.VoteSystemDO" useGeneratedKeys="true" keyProperty="id">
    insert into votesystem
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="voteName != null" >
        vote_name,
      </if>
      <if test="singleVoteAgree != null" >
        single_vote_agree,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="ispublic != null" >
        ispublic,
      </if>
      <if test="openid != null" >
        openid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="voteName != null" >
        #{voteName,jdbcType=VARCHAR},
      </if>
      <if test="singleVoteAgree != null" >
        #{singleVoteAgree,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ispublic != null" >
        #{ispublic,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shu.votetool.model.entity.VoteSystemDOExample" resultType="java.lang.Integer" >
    select count(*) from votesystem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update votesystem
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.voteName != null" >
        vote_name = #{record.voteName,jdbcType=VARCHAR},
      </if>
      <if test="record.singleVoteAgree != null" >
        single_vote_agree = #{record.singleVoteAgree,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ispublic != null" >
        ispublic = #{record.ispublic,jdbcType=INTEGER},
      </if>
      <if test="record.openid != null" >
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update votesystem
    set id = #{record.id,jdbcType=INTEGER},
      vote_name = #{record.voteName,jdbcType=VARCHAR},
      single_vote_agree = #{record.singleVoteAgree,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      ispublic = #{record.ispublic,jdbcType=INTEGER},
      openid = #{record.openid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shu.votetool.model.entity.VoteSystemDO" >
    update votesystem
    <set >
      <if test="voteName != null" >
        vote_name = #{voteName,jdbcType=VARCHAR},
      </if>
      <if test="singleVoteAgree != null" >
        single_vote_agree = #{singleVoteAgree,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ispublic != null" >
        ispublic = #{ispublic,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shu.votetool.model.entity.VoteSystemDO" >
    update votesystem
    set vote_name = #{voteName,jdbcType=VARCHAR},
      single_vote_agree = #{singleVoteAgree,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      ispublic = #{ispublic,jdbcType=INTEGER},
      openid = #{openid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectVoteSystemIdByOpenid" parameterType="java.lang.String" resultType="integer">
    select id from votesystem where openid = #{openid,jdbcType=VARCHAR}
  </select>
</mapper>